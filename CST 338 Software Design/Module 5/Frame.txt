import java.awt.*;
import javax.swing.*;
import javax.swing.border.*;

public class frame
{
   static int NUM_CARDS_PER_HAND = 7;
   static int  NUM_PLAYERS = 2;
   static JLabel[] computerLabels = new JLabel[NUM_CARDS_PER_HAND];
   static JLabel[] humanLabels = new JLabel[NUM_CARDS_PER_HAND];  
   static JLabel[] playedCardLabels  = new JLabel[NUM_PLAYERS]; 
   static JLabel[] playLabelText  = new JLabel[NUM_PLAYERS]; 
   
   public static void main(String[] args)
   {
      int k;
      Icon tempIcon;
      //JFrame.setDefaultLookAndFeelDecorated(true);
      // establish main frame in which program will run
      CardTable myCardTable 
         = new CardTable("CardTable", NUM_CARDS_PER_HAND, NUM_PLAYERS);
      myCardTable.setSize(800, 600);
      myCardTable.setLocationRelativeTo(null);
      myCardTable.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

      // show everything to the user
      myCardTable.setVisible(true);

      // CREATE LABELS ----------------------------------------------------
     //code goes here ...
  
      // ADD LABELS TO PANELS -----------------------------------------
      //code goes here ...
      
      // and two random cards in the play region (simulating a computer/hum ply)
      //code goes here ...

      // show everything to the user
      myCardTable.setVisible(true);
   }
}
class CardTable extends JFrame
{
   static int MAX_CARDS_PER_HAND = 56;
   static int MAX_PLAYERS = 2;  // for now, we only allow 2 person games
   
   private int numCardsPerHand;
   private int numPlayers;

   // The constructor filters input, adds any panels to the JFrame, 
   // and establishes layouts according to the general description below.
   public JPanel pnlComputerHand;
   public JPanel pnlHumanHand;
   public JPanel pnlPlayArea;
   
   
   CardTable(String title, int numCardsPerHand, int numPlayers)
   {
      super(title);
      
      LayoutManager layoutManager = new GridLayout(3,1);
      setLayout(layoutManager);
      pnlComputerHand = new JPanel(layoutManager);
      pnlHumanHand = new JPanel(layoutManager);
      pnlPlayArea = new JPanel(layoutManager);
      
      this.numCardsPerHand = Math.min(numCardsPerHand, MAX_CARDS_PER_HAND);
      this.numPlayers = Math.min(numPlayers, MAX_PLAYERS);
     
      
      
      // set up layout which will control placement of buttons, etc.
      
      // Set panels
      pnlComputerHand.setBorder(BorderFactory.createEmptyBorder(100,100,100,100));
      pnlHumanHand.setBorder(BorderFactory.createRaisedBevelBorder());
      pnlPlayArea.setBorder(BorderFactory.createRaisedBevelBorder());
      pnlComputerHand.setVisible(true);      
      pnlHumanHand.setVisible(true);
      pnlPlayArea.setVisible(true);
      add(pnlComputerHand);
      JLabel testLabel = new JLabel("Test");
      pnlComputerHand.add(testLabel);
      add(pnlPlayArea);
      add(pnlHumanHand);

   }
   
   // Accessor for number of cards per hand
   public int numCardsPerHand()
   {
      return numCardsPerHand;
   }
   
   // Accessor for number of players
   public int numPlayers()
   {
      return numPlayers;
   }
}